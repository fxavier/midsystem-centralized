version: '3.9'

services:
  app:
    container_name: mid_app
    build:
      context: .
    command: >
     sh -c "python manage.py wait_for_db &&
            python manage.py migrate &&
            python manage.py runserver 0.0.0.0:8000"
    ports:
      - 8000:8000
    volumes:
      - ./app:/app
      - ./data/web:/vol/web
 
    env_file:
      - .env

    environment:
      - SECRET_KEY=devsecretkey
      - DEBUG=1
      - DB_HOST=db
      - DB_NAME=dbcentralized
      - DB_USER=dbcentralized
      - DB_PASS=changeme
      - CELERY_BROKER=redis://redis:6379/0
      - CELERY_BACKEND=redis://redis:6379/0
      # - MYSQL_CA=${MYSQL_CA}
      # - MYSQL_CERT=${MYSQL_CERT}
      # - MYSQL_KEY=${MYSQL_KEY}
      # - MYSQL_USER=${MYSQL_USER}
      # - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      # - SOFALA_MYSQL_HOST=${SOFALA_MYSQL_HOST}
      # - SOFALA_MYSQL_PORT=${SOFALA_MYSQL_PORT}
      # - MYSQL_DATABASE=${MYSQL_DATABASE}
      # - PG_USER=${PG_USER}
      # - PG_PASSWORD=${PG_PASSWORD}
      # - PG_HOST=localhost
      # - PG_PORT=5432
      # - PG_DATABASE=dbcentralized

    networks:
      - mid_network

    depends_on:
      - db
      - redis



  db:
    image: postgres:13-alpine
    container_name: middb-centralized
    restart: always
    environment:
      - POSTGRES_DB=dbcentralized
      - POSTGRES_USER=dbcentralized
      - POSTGRES_PASSWORD=changeme
    volumes:
      - pgdata:/var/lib/postgresql/data/
    env_file:
      - .env

    ports:
      - 5432:5432
    networks:
      - mid_network
  
  celery:
    container_name: mid-celery-centralized
    restart: always
    build: 
      context: . 
    command: celery -A app worker -l info
    volumes: 
      - ./app:/app
    env_file:
      - .env

    environment:
      - SECRET_KEY=devsecretkey
      - DEBUG=1
      - DB_HOST=db
      - DB_NAME=dbcentralized
      - DB_USER=dbcentralized
      - DB_PASS=changeme
      - CELERY_BROKER=redis://redis:6379/0
      - CELERY_BACKEND=redis://redis:6379/0
      # - MYSQL_CA=${MYSQL_CA}
      # - MYSQL_CERT=${MYSQL_CERT}
      # - MYSQL_KEY=${MYSQL_KEY}
      # - MYSQL_USER=${MYSQL_USER}
      # - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      # - SOFALA_MYSQL_HOST=${SOFALA_MYSQL_HOST}
      # - SOFALA_MYSQL_PORT=${SOFALA_MYSQL_PORT}
      # - MYSQL_DATABASE=${MYSQL_DATABASE}
      # - PG_USER=${PG_USER}
      # - PG_PASSWORD=${PG_PASSWORD}
      # - PG_HOST=localhost
      # - PG_PORT=5432
      # - PG_DATABASE=dbcentralized
    
    networks:
      - mid_network
      
    depends_on:
      - app
      - redis
    
  celery-beat:
    container_name: mid-celery-beat-centralized
    build:
      context: .
    command: celery -A app beat -l INFO --scheduler django_celery_beat.schedulers:DatabaseScheduler
    volumes: 
      - ./app:/app
    env_file:
      - .env

    environment:
      - SECRET_KEY=devsecretkey
      - DEBUG=1
      - DB_HOST=db
      - DB_NAME=dbcentralized
      - DB_USER=dbcentralized
      - DB_PASS=changeme
      - CELERY_BROKER=redis://redis:6379/0
      - CELERY_BACKEND=redis://redis:6379/0
      # - MYSQL_CA=${MYSQL_CA}
      # - MYSQL_CERT=${MYSQL_CERT}
      # - MYSQL_KEY=${MYSQL_KEY}
      # - MYSQL_USER=${MYSQL_USER}
      # - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      # - SOFALA_MYSQL_HOST=${SOFALA_MYSQL_HOST}
      # - SOFALA_MYSQL_PORT=${SOFALA_MYSQL_PORT}
      # - MYSQL_DATABASE=${MYSQL_DATABASE}
      # - PG_USER=${PG_USER}
      # - PG_PASSWORD=${PG_PASSWORD}
      # - PG_HOST=localhost
      # - PG_PORT=5432
      # - PG_DATABASE=dbcentralized

    networks:
      - mid_network

    depends_on:
      - app
      - redis

  redis:
      image: redis
      container_name: mid-redis-centralized
      ports:
        - 6379:6379
      networks:
       - mid_network

networks:
  mid_network:
    driver: bridge

volumes:
  pgdata:

